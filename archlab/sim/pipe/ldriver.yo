                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f49806000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f61804000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f70802000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032:                      | Loop:
0x032: c0f2fcffffffffffffff | 	iaddq $-4,%rdx		# len <= 0?
0x03c: 720601000000000000   | 	jl DoneLoop		# if so, goto Done:
0x045:                      | pos0:	
0x045: 50a70000000000000000 | 	mrmovq (%rdi),%r10
0x04f: 40a60000000000000000 | 	rmmovq %r10,(%rsi)
0x059: 62aa                 | 	andq %r10,%r10
0x05b: 50b70800000000000000 | 	mrmovq 8(%rdi),%r11
0x065: 717800000000000000   | 	jle pos1
0x06e: c0f00100000000000000 | 	iaddq $1,%rax
0x078:                      | pos1:
0x078: 40b60800000000000000 | 	rmmovq %r11,8(%rsi)
0x082: 62bb                 | 	andq %r11,%r11
0x084: 50a71000000000000000 | 	mrmovq 16(%rdi),%r10
0x08e: 71a100000000000000   | 	jle pos2
0x097: c0f00100000000000000 | 	iaddq $1,%rax
0x0a1:                      | pos2:
0x0a1: 40a61000000000000000 | 	rmmovq %r10,16(%rsi)
0x0ab: 62aa                 | 	andq %r10,%r10
0x0ad: 50b71800000000000000 | 	mrmovq 24(%rdi),%r11
0x0b7: 71ca00000000000000   | 	jle pos3
0x0c0: c0f00100000000000000 | 	iaddq $1,%rax
0x0ca:                      | pos3:
0x0ca: 40b61800000000000000 | 	rmmovq %r11,24(%rsi)
0x0d4: c0f72000000000000000 | 	iaddq $32,%rdi
0x0de: c0f62000000000000000 | 	iaddq $32,%rsi
0x0e8: 62bb                 | 	andq %r11,%r11
0x0ea: 713200000000000000   | 	jle Loop
0x0f3: c0f00100000000000000 | 	iaddq $1,%rax
0x0fd: 703200000000000000   | 	jmp Loop
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x106:                      | DoneLoop:
0x106: c0f20400000000000000 | 	iaddq $4,%rdx
0x110:                      | pos4:	
0x110: c0f2ffffffffffffffff | 	iaddq $-1,%rdx
0x11a: 50a70000000000000000 | 	mrmovq (%rdi),%r10
0x124: 720002000000000000   | 	jl Done
0x12d: 40a60000000000000000 | 	rmmovq %r10,(%rsi)
0x137: 62aa                 | 	andq %r10,%r10
0x139: 714c01000000000000   | 	jle pos5
0x142: c0f00100000000000000 | 	iaddq $1,%rax
0x14c:                      | pos5:
0x14c: c0f2ffffffffffffffff | 	iaddq $-1,%rdx
0x156: 50a70800000000000000 | 	mrmovq 8(%rdi),%r10
0x160: 720002000000000000   | 	jl Done
0x169: 40a60800000000000000 | 	rmmovq %r10,8(%rsi)
0x173: 62aa                 | 	andq %r10,%r10
0x175: 718801000000000000   | 	jle pos6
0x17e: c0f00100000000000000 | 	iaddq $1,%rax
0x188:                      | pos6:
0x188: c0f2ffffffffffffffff | 	iaddq $-1,%rdx
0x192: 50a71000000000000000 | 	mrmovq 16(%rdi),%r10
0x19c: 720002000000000000   | 	jl Done
0x1a5: 40a61000000000000000 | 	rmmovq %r10,16(%rsi)
0x1af: 62aa                 | 	andq %r10,%r10
0x1b1: 71c401000000000000   | 	jle pos7
0x1ba: c0f00100000000000000 | 	iaddq $1,%rax
0x1c4:                      | pos7:
0x1c4: c0f2ffffffffffffffff | 	iaddq $-1,%rdx
0x1ce: 50a71800000000000000 | 	mrmovq 24(%rdi),%r10
0x1d8: 720002000000000000   | 	jl Done
0x1e1: 40a61800000000000000 | 	rmmovq %r10,24(%rsi)
0x1eb: 62aa                 | 	andq %r10,%r10
0x1ed: 710002000000000000   | 	jle Done
0x1f6: c0f00100000000000000 | 	iaddq $1,%rax
0x200:                      | Done:
0x200: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x201:                      | End:
                            | #/* $end ncopy-ys */
0x201:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x208:                      | 	.align 8
0x208:                      | src:
0x208: 0100000000000000     | 	.quad 1
0x210: 0200000000000000     | 	.quad 2
0x218: 0300000000000000     | 	.quad 3
0x220: 0400000000000000     | 	.quad 4
0x228: 0500000000000000     | 	.quad 5
0x230: faffffffffffffff     | 	.quad -6
0x238: f9ffffffffffffff     | 	.quad -7
0x240: 0800000000000000     | 	.quad 8
0x248: f7ffffffffffffff     | 	.quad -9
0x250: f6ffffffffffffff     | 	.quad -10
0x258: 0b00000000000000     | 	.quad 11
0x260: f4ffffffffffffff     | 	.quad -12
0x268: 0d00000000000000     | 	.quad 13
0x270: 0e00000000000000     | 	.quad 14
0x278: 0f00000000000000     | 	.quad 15
0x280: 1000000000000000     | 	.quad 16
0x288: 1100000000000000     | 	.quad 17
0x290: eeffffffffffffff     | 	.quad -18
0x298: edffffffffffffff     | 	.quad -19
0x2a0: 1400000000000000     | 	.quad 20
0x2a8: 1500000000000000     | 	.quad 21
0x2b0: 1600000000000000     | 	.quad 22
0x2b8: 1700000000000000     | 	.quad 23
0x2c0: e8ffffffffffffff     | 	.quad -24
0x2c8: e7ffffffffffffff     | 	.quad -25
0x2d0: 1a00000000000000     | 	.quad 26
0x2d8: 1b00000000000000     | 	.quad 27
0x2e0: 1c00000000000000     | 	.quad 28
0x2e8: 1d00000000000000     | 	.quad 29
0x2f0: 1e00000000000000     | 	.quad 30
0x2f8: e1ffffffffffffff     | 	.quad -31
0x300: e0ffffffffffffff     | 	.quad -32
0x308: 2100000000000000     | 	.quad 33
0x310: 2200000000000000     | 	.quad 34
0x318: 2300000000000000     | 	.quad 35
0x320: dcffffffffffffff     | 	.quad -36
0x328: dbffffffffffffff     | 	.quad -37
0x330: daffffffffffffff     | 	.quad -38
0x338: d9ffffffffffffff     | 	.quad -39
0x340: d8ffffffffffffff     | 	.quad -40
0x348: 2900000000000000     | 	.quad 41
0x350: 2a00000000000000     | 	.quad 42
0x358: 2b00000000000000     | 	.quad 43
0x360: 2c00000000000000     | 	.quad 44
0x368: d3ffffffffffffff     | 	.quad -45
0x370: 2e00000000000000     | 	.quad 46
0x378: 2f00000000000000     | 	.quad 47
0x380: d0ffffffffffffff     | 	.quad -48
0x388: cfffffffffffffff     | 	.quad -49
0x390: ceffffffffffffff     | 	.quad -50
0x398: 3300000000000000     | 	.quad 51
0x3a0: ccffffffffffffff     | 	.quad -52
0x3a8: cbffffffffffffff     | 	.quad -53
0x3b0: caffffffffffffff     | 	.quad -54
0x3b8: c9ffffffffffffff     | 	.quad -55
0x3c0: c8ffffffffffffff     | 	.quad -56
0x3c8: c7ffffffffffffff     | 	.quad -57
0x3d0: c6ffffffffffffff     | 	.quad -58
0x3d8: c5ffffffffffffff     | 	.quad -59
0x3e0: c4ffffffffffffff     | 	.quad -60
0x3e8: c3ffffffffffffff     | 	.quad -61
0x3f0: c2ffffffffffffff     | 	.quad -62
0x3f8: c1ffffffffffffff     | 	.quad -63
0x400: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x410:                      | 	.align 16
0x410:                      | Predest:
0x410: fadebc0000000000     | 	.quad 0xbcdefa
0x418:                      | dest:
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520: abefcd0000000000     | 	.quad 0xcdefab
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570: abefcd0000000000     | 	.quad 0xcdefab
0x578: abefcd0000000000     | 	.quad 0xcdefab
0x580: abefcd0000000000     | 	.quad 0xcdefab
0x588: abefcd0000000000     | 	.quad 0xcdefab
0x590: abefcd0000000000     | 	.quad 0xcdefab
0x598: abefcd0000000000     | 	.quad 0xcdefab
0x5a0: abefcd0000000000     | 	.quad 0xcdefab
0x5a8: abefcd0000000000     | 	.quad 0xcdefab
0x5b0: abefcd0000000000     | 	.quad 0xcdefab
0x5b8: abefcd0000000000     | 	.quad 0xcdefab
0x5c0: abefcd0000000000     | 	.quad 0xcdefab
0x5c8: abefcd0000000000     | 	.quad 0xcdefab
0x5d0: abefcd0000000000     | 	.quad 0xcdefab
0x5d8: abefcd0000000000     | 	.quad 0xcdefab
0x5e0: abefcd0000000000     | 	.quad 0xcdefab
0x5e8: abefcd0000000000     | 	.quad 0xcdefab
0x5f0: abefcd0000000000     | 	.quad 0xcdefab
0x5f8: abefcd0000000000     | 	.quad 0xcdefab
0x600: abefcd0000000000     | 	.quad 0xcdefab
0x608: abefcd0000000000     | 	.quad 0xcdefab
0x610:                      | Postdest:
0x610: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x618:                      | .align 8
                            | # Run time stack
0x618: 0000000000000000     | 	.quad 0
0x620: 0000000000000000     | 	.quad 0
0x628: 0000000000000000     | 	.quad 0
0x630: 0000000000000000     | 	.quad 0
0x638: 0000000000000000     | 	.quad 0
0x640: 0000000000000000     | 	.quad 0
0x648: 0000000000000000     | 	.quad 0
0x650: 0000000000000000     | 	.quad 0
0x658: 0000000000000000     | 	.quad 0
0x660: 0000000000000000     | 	.quad 0
0x668: 0000000000000000     | 	.quad 0
0x670: 0000000000000000     | 	.quad 0
0x678: 0000000000000000     | 	.quad 0
0x680: 0000000000000000     | 	.quad 0
0x688: 0000000000000000     | 	.quad 0
0x690: 0000000000000000     | 	.quad 0
                            | 
0x698:                      | Stack:
